//CONTENTS

//1. Colours
//    1.1 Colour palette
//    1.2 Abstracted colour variables
//2. Typography
//    2.1 Mixins & extends
//    2.2 Font imports & settings
//3. Simple Spacing
//4. Breakpoints
//5. Helper mixins

// 1. COLOURS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// 1.1 Colour palette:
// Amend for your own palette. It's fine to rename vars - abstracting of these is in the next section (1.2) so updating that will update all other files.
$blue:rgba(38,39,72,1);
$purple:rgba(95,46,68,1);
$pink:rgba(164,62,79,1);
$orange:rgba(180,119,66,1);
$cyan:rgba(82,174,159,1);
$cream:rgba(243,243,233,1);

$grey: desaturate($blue, 95%);
$darkGrey: darken($grey, 20%);
$lightGrey: lighten($grey, 20%);
$extraLightGrey: lighten($grey, 40%);

$white: darken(lighten($grey,100%),1%);
$black: lighten(darken($blue,100%),5%);

//1.2 Abstracted colour variables:
// For use within other sass files. Usually specified for each element at the beginning of it's specific sass file. E.g. $primaryButtonColour:$primaryColour;
$primaryColour: $blue !default;
$secondaryColour: $cyan !default;
$tertiaryColour: $grey !default;
// quaternary, quinary, senary

// category colours
$brainDribble: $purple;
$craftCode: $pink;
$speakWrite: $orange;

$primaryBackgroundColour: $white !default;
$secondaryBackgroundColour: $cream !default;
$tertiaryBackgroundColour: $lightGrey !default;

$borderColour: $lightGrey !default;

$successColour: $cyan !default;
$errorColour: $pink !default;

$primaryFontColour: $black !default;
$alternateFontColour: $white !default;


//2. TYPOGRAPHY ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// 2.1 Mixins & extends
// For all filetypes
/*The following is taken from Bourbon: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/css3/_font-face.scss*/
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if $asset-pipeline == true {
      src: font-url('#{$file-path}.eot');
      src: font-url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),
           font-url('#{$file-path}.woff')                format('woff'),
           font-url('#{$file-path}.otf')                format('opentype'),
           font-url('#{$file-path}.ttf')                 format('truetype'),
           font-url('#{$file-path}.svg##{$font-family}') format('svg');
    } @else {
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),
           url('#{$file-path}.woff')                     format('woff'),
           url('#{$file-path}.otf')                     format('opentype'),
           url('#{$file-path}.ttf')                      format('truetype'),
           url('#{$file-path}.svg##{$font-family}')      format('svg');
    }
  }
}

// wrap words
@mixin word-wrap {
	white-space:pre;
	white-space:pre-wrap;
	word-wrap:break-word;
}
// remove text from elements, whilst keeping it in the dom
.hide-font {color:transparent; font-size:0px; text-transform:none; text-decoration:none;}

//2.2 Font imports & settings
@import url(http://fonts.googleapis.com/css?family=Playball);
@include font-face('Adventor', '../fonts/texgyreadventor-regular-webfont');
@include font-face('Adventor', '../fonts/texgyreadventor-italic-webfont', normal, italic);
@include font-face('Adventor', '../fonts/texgyreadventor-bold-webfont', bold);
@include font-face('Adventor', '../fonts/texgyreadventor-bolditalic-webfont', bold, italic);
@include font-face('Font Awesome', '../fonts/fontawesome-webfont');


$font:'Adventor', Helvetica, Arial, sans-serif !default;
$fontSize:1em !default;
$lineHeight:1.5 !default;

$headerFont:'Playball', cursive !default;
$headerLineHeight:1.1;

$iconFont:'Font Awesome', monospace !default;
$iconFontSize:20px !default;
$iconLineHeight:25px !default;


// 3. SIMPLE SPACING ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// top and bottom space
$verticalSpace:1.5em !default;
// left and right space
$gutter:1.5em !default;


//4. BREAKPOINTS ~~~~~~~~~~~~~~~~~~~~~~~~~~~
/*The following are taken from Brandon Mathis - http://codepen.io/imathis/pen/BDzcI*/
@mixin at-least($device-width) {
  @media screen and (min-width: $device-width) {
    @content 
  }
}

@mixin until($device-width) {
  @media screen and (max-width: $device-width - 1) {
    @content 
  }
}

// use with breakpoint mixin like @include until($small) or @include at-least($screenLarge)
$screenSmall:480px;
$screenMedium:640px;
$screenLarge:860px;
$screenXlarge:1280px;

//5. HELPER MIXINS ~~~~~~~~~~~~~~~~~~~~~~~~~~~
// vendor prefixing
@mixin simple-vendor-prefix($name, $argument) {
  -webkit-#{$name}: $argument;
  -ms-#{$name}: $argument;
  -moz-#{$name}: $argument;
  -o-#{$name}: $argument;
  #{$name}: $argument;
}

/* 1.4 Nice design stuff/little shineys------------------------*/
$roundedCorners:1px;
$boxShadow:0px 0px 0px 0px $grey;
/*below is not the best way to do this - I need to refactor ~Ruth*/
@mixin special-border($borderColour, $position:left, $first:light, $width:20px) {
  $emWidth: ($width/16)*1em;
  //set defaults
  $padding:0px $gutter/2;
  $gradientDirection:top;
  $size:$width 100%;
  $bkPosition:left top;
  @if $position == top {
    $padding:$verticalSpace/2 0px;
    $gradientDirection:left;
    $size:100% $width;
  } @else if $position == right {
    $padding:0px $gutter/2;
    $bkPosition:right top;
  } @else if $position == bottom {
    $padding:$verticalSpace/2 0px;
    $gradientDirection:left;
    $size:100% $width;
    $bkPosition:left bottom;
  }
  padding:$padding;
  @if $first == light {
    background-image:
      -webkit-linear-gradient($gradientDirection,
        lighten($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        darken($borderColour, 15%) 66%
      )
    ;
    background-image:
      -moz-linear-gradient($gradientDirection,
        lighten($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        darken($borderColour, 15%) 66%
      )
    ;
    background-image:
      -ms-linear-gradient($gradientDirection,
        lighten($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        darken($borderColour, 15%) 66%
      )
    ;
    background-image:
      -o-linear-gradient($gradientDirection,
        lighten($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        darken($borderColour, 15%) 66%
      )
    ;
    background-image:
      linear-gradient($gradientDirection,
        lighten($borderColour, 15%) 33%,
        $borderColour 34%,
        $borderColour 66%,
        darken($borderColour, 5%) 67%
      )
    ;
  } @else {
    background-image:
      -webkit-linear-gradient($gradientDirection,
        darken($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        lighten($borderColour, 15%) 66%
      )
    ;
    background-image:
      -moz-linear-gradient($gradientDirection,
        darken($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        lighten($borderColour, 15%) 66%
      )
    ;
    background-image:
      -o-linear-gradient($gradientDirection,
        darken($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        lighten($borderColour, 15%) 66%
      )
    ;
    background-image:
      -ms-linear-gradient($gradientDirection,
        darken($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        lighten($borderColour, 15%) 66%
      )
    ;
    background-image:
      linear-gradient($gradientDirection,
        darken($borderColour, 15%) 33%,
        $borderColour 33%,
        $borderColour 66%,
        lighten($borderColour, 15%) 66%
      )
    ;
  }
  background-repeat:no-repeat;
  background-size:$size;
  background-position:$bkPosition;
}

@mixin button-style($buttonColour) {
    background-color:$buttonColour;
    background-image:
      -webkit-linear-gradient(top,
        lighten($buttonColour, 10%) 33%,
        $buttonColour 34%,
        $buttonColour 66%,
        darken($buttonColour, 5%) 67%
      )
    ;
    background-image:
      -moz-linear-gradient(top,
        lighten($buttonColour, 10%) 33%,
        $buttonColour 34%,
        $buttonColour 66%,
        darken($buttonColour, 5%) 67%
      )
    ;
    background-image:
      -ms-linear-gradient(top,
        lighten($buttonColour, 10%) 33%,
        $buttonColour 34%,
        $buttonColour 66%,
        darken($buttonColour, 5%) 67%
      )
    ;
    background-image:
      -o-linear-gradient(top,
        lighten($buttonColour, 10%) 33%,
        $buttonColour 34%,
        $buttonColour 66%,
        darken($buttonColour, 5%) 67%
      )
    ;
    background-image:
      linear-gradient(top,
        lighten($buttonColour, 10%) 33%,
        $buttonColour 34%,
        $buttonColour 66%,
        darken($buttonColour, 5%) 67%
      )
    ;
    display:inline-block;
    padding:8px 10px;
    border-radius:$roundedCorners; border:3px solid $grey;
    color: $white; font-family:$font;
    text-decoration:none; text-shadow:none; text-align:center;
    &:hover {
        background-color: darken($buttonColour,5%);
        background-image:
          -webkit-linear-gradient(top,
            lighten($buttonColour, 15%) 33%,
            lighten($buttonColour, 3%) 34%,
            lighten($buttonColour, 3%) 66%,
            lighten($buttonColour, 1%) 67%
          )
        ;
        background-image:
          -moz-linear-gradient(top,
            lighten($buttonColour, 15%) 33%,
            lighten($buttonColour, 3%) 34%,
            lighten($buttonColour, 3%) 66%,
            lighten($buttonColour, 1%) 67%
          )
        ;
        background-image:
          -o-linear-gradient(top,
            lighten($buttonColour, 15%) 33%,
            lighten($buttonColour, 3%) 34%,
            lighten($buttonColour, 3%) 66%,
            lighten($buttonColour, 1%) 67%
          )
        ;
        background-image:
          -ms-linear-gradient(top,
            lighten($buttonColour, 15%) 33%,
            lighten($buttonColour, 3%) 34%,
            lighten($buttonColour, 3%) 66%,
            lighten($buttonColour, 1%) 67%
          )
        ;
        background-image:
          linear-gradient(top,
            lighten($buttonColour, 15%) 33%,
            lighten($buttonColour, 3%) 34%,
            lighten($buttonColour, 3%) 66%,
            lighten($buttonColour, 1%) 67%
          )
        ;
        cursor: pointer;
        color: $white;
    }
}

@mixin gradedBackground($colour) {
  padding-left:40px;
  background-image:
    -webkit-linear-gradient(left,
      lighten($colour, 15%) 10px,
      $colour 11px,
      $colour 20px,
      darken($colour, 15%) 21px,
      darken($colour, 15%) 30px,
      transparent 31px
    )
  ;
  background-image:
    -moz-linear-gradient(left,
      lighten($colour, 15%) 10px,
      $colour 11px,
      $colour 20px,
      darken($colour, 15%) 21px,
      darken($colour, 15%) 30px,
      transparent 31px
    )
  ;
  background-image:
    -o-linear-gradient(left,
      lighten($colour, 15%) 10px,
      $colour 11px,
      $colour 20px,
      darken($colour, 15%) 21px,
      darken($colour, 15%) 30px,
      transparent 31px
    )
  ;
  background-image:
    -ms-linear-gradient(left,
      lighten($colour, 15%) 10px,
      $colour 11px,
      $colour 20px,
      darken($colour, 15%) 21px,
      darken($colour, 15%) 30px,
      transparent 31px
    )
  ;
  background-image:
    linear-gradient(left,
      lighten($colour, 15%) 10px,
      $colour 11px,
      $colour 20px,
      darken($colour, 15%) 21px,
      darken($colour, 15%) 30px,
      transparent 31px
    )
  ;
  @media all and (max-width:900px) {
    padding-left:32px;
    background-image:
      -webkit-linear-gradient(left,
        lighten($colour, 15%) 8px,
        $colour 9px,
        $colour 16px,
        darken($colour, 15%) 17px,
        darken($colour, 15%) 24px,
        transparent 25px
      )
    ;
    background-image:
      -moz-linear-gradient(left,
        lighten($colour, 15%) 8px,
        $colour 9px,
        $colour 16px,
        darken($colour, 15%) 17px,
        darken($colour, 15%) 24px,
        transparent 25px
      )
    ;
    background-image:
      -o-linear-gradient(left,
        lighten($colour, 15%) 8px,
        $colour 9px,
        $colour 16px,
        darken($colour, 15%) 17px,
        darken($colour, 15%) 24px,
        transparent 25px
      )
    ;
    background-image:
      -ms-linear-gradient(left,
        lighten($colour, 15%) 8px,
        $colour 9px,
        $colour 16px,
        darken($colour, 15%) 17px,
        darken($colour, 15%) 24px,
        transparent 25px
      )
    ;
    background-image:
      linear-gradient(left,
        lighten($colour, 15%) 8px,
        $colour 9px,
        $colour 16px,
        darken($colour, 15%) 17px,
        darken($colour, 15%) 24px,
        transparent 25px
      )
    ;
  }
}




